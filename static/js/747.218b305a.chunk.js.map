{"version":3,"file":"static/js/747.218b305a.chunk.js","mappings":"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","sources":["webpack://first-project/./src/components/Chat/Chat.module.scss?3294","webpack://first-project/./src/components/Chat/Header/Header.module.scss?289d","components/Chat/Header/Header.jsx","webpack://first-project/./src/components/Chat/Messages/Messages.module.scss?4dda","utils/dateTransform.js","webpack://first-project/./src/components/Chat/Messages/Message/Message.module.scss?2dab","components/Chat/Messages/Message/Message.jsx","components/Chat/Messages/Messages.jsx","webpack://first-project/./src/components/Chat/Input/Input.module.scss?599a","components/Chat/Input/Input.jsx","components/Chat/Chat.jsx","components/Chat/ChatContainer.jsx","webpack://first-project/./src/components/_common/Inputs/Inputs.module.scss?8af3","components/_common/Inputs/Inputs.jsx","webpack://first-project/./src/components/_common/Preloader/Preloader.module.scss?3ea5","components/_common/Preloader/Preloader.jsx","hoc/withAuthRedirect.js","redux/chatSelectors.js","utils/checkScrollbar.js","utils/formValidation.js","utils/intersectionObserver.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Chat_wrap__5o1kl\",\"contentWrap\":\"Chat_contentWrap__ZReIg\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Header_wrap__mPPRP\",\"wrap_dark\":\"Header_wrap_dark__fOQUZ\",\"goBackButton\":\"Header_goBackButton__DBsF9\",\"name\":\"Header_name__9uURf\",\"icon\":\"Header_icon__eZcsh\",\"userInfo\":\"Header_userInfo__RJusU\",\"imgLink\":\"Header_imgLink__OaE9d\",\"avatar\":\"Header_avatar__R5ZIG\"};","import styles from \"./Header.module.scss\";\r\nimport { SvgSelector } from \"../../_common/SvgSelector/SvgSelector\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { AppContext } from \"../../../App\";\r\n\r\nconst Header = ({ recipientImage, recipientName, dialogId }) => {\r\n    const appContext = useContext(AppContext);\r\n\r\n    return (\r\n        <div className={appContext.currentTheme === \"dark\" ? styles.wrap + \" \" + styles.wrap_dark : styles.wrap}>\r\n            <NavLink to=\"/messages\" className={styles.goBackButton}>\r\n                <SvgSelector className={styles.icon} id=\"arrowBack\"></SvgSelector>\r\n                <span>\r\n                    {appContext.currentLanguage === \"eng\" && \"Go back\"} {appContext.currentLanguage === \"ru\" && \"Назад\"}\r\n                </span>\r\n            </NavLink>\r\n            <div className={styles.userInfo}>\r\n                <NavLink to={`/profile/${dialogId}`} className={styles.name}>\r\n                    {recipientName}\r\n                </NavLink>\r\n            </div>\r\n            <NavLink className={styles.imgLink} to={`/profile/${dialogId}`}>\r\n                <img src={recipientImage} alt=\"avatar\" className={styles.avatar} />\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Messages_wrap__h7bIs\",\"wrap_dark\":\"Messages_wrap_dark__sc4Lk\"};","export const dateToObj = (dateSrc) => {\r\n    let day = dateSrc.slice(0, dateSrc.indexOf(\"T\"));\r\n    let year = day.slice(0, day.indexOf(\"-\"));\r\n    let monthNum = day.slice(5, 7);\r\n    let month = monthNumToAbb(monthNum);\r\n    day = day.slice(-2)\r\n    let time = dateSrc.slice(dateSrc.indexOf(\"T\") + 1);\r\n    let fullTime = time.slice(0, time.indexOf(\".\"));\r\n    let hour = time.slice(0, 2);\r\n    let minute = time.slice(3, 5);\r\n    let second = time.slice(6, 8);\r\n    return {year, monthNum, month, day, fullTime, hour, minute, second}\r\n}\r\n\r\nexport const monthNumToAbb = (month) => {\r\n    switch (month) {\r\n        case '01': return 'Jan'\r\n        case '02': return 'Feb'\r\n        case '03': return 'Mar'\r\n        case '04': return 'Apr'\r\n        case '05': return 'May'\r\n        case '06': return 'Jun'\r\n        case '07': return 'Jul'\r\n        case '08': return 'Aug'\r\n        case '09': return 'Sep'\r\n        case '10': return 'Oct'\r\n        case '11': return 'Nov'\r\n        case '12': return 'Dec'\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Message_wrap__gc5Pe\",\"wrap_notViewed\":\"Message_wrap_notViewed__spOBk\",\"wrap_sentByUser\":\"Message_wrap_sentByUser__q17wi\",\"wrap_sentByRecipient\":\"Message_wrap_sentByRecipient__qJByW\",\"wrap_dark\":\"Message_wrap_dark__Ukxpv\",\"author\":\"Message_author__o-jAe\",\"content\":\"Message_content__rGUGH\",\"avatarWrap\":\"Message_avatarWrap__Zxl2B\",\"avatar\":\"Message_avatar__wLnX6\",\"arrivalTime\":\"Message_arrivalTime__0duye\"};","import { useContext, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AppContext } from \"../../../../App\";\r\nimport { dateToObj } from \"../../../../utils/dateTransform\";\r\nimport styles from \"./Message.module.scss\";\r\n\r\nconst Message = (props) => {\r\n    const appContext = useContext(AppContext);\r\n\r\n    const wrapClassName = `${styles.wrap} ${props.authUserId === props.senderId ? styles.wrap_sentByUser : styles.wrap_sentByRecipient} ${\r\n        props.viewed ? \"\" : styles.wrap_notViewed\r\n    } ${appContext.currentTheme === \"dark\" ? styles.wrap_dark : \"\"}`;\r\n    const imgUrl = props.authUserId === props.senderId ? props.userImage : props.recipientImage;\r\n\r\n    const date = dateToObj(props.addedAt);\r\n    const arrivalTime = setDate(date, appContext.currentLanguage);\r\n\r\n    return (\r\n        <div id={props.id} className={wrapClassName}>\r\n            <NavLink to={`/profile/${props.senderId}`} className={styles.avatarWrap}>\r\n                <img className={styles.avatar} src={imgUrl} alt=\"avatar\" />\r\n            </NavLink>\r\n            <div className={styles.content}>\r\n                <NavLink to={`/profile/${props.senderId}`} className={styles.author}>\r\n                    {props.senderName}\r\n                </NavLink>\r\n                {/* <span className={styles.author}>{props.senderName}</span> */}\r\n                <div dangerouslySetInnerHTML={{ __html: props.body }}></div>\r\n                {/* {props.body} */}\r\n                <div className={styles.meta}>\r\n                    <span className={styles.arrivalTime}>{arrivalTime}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst setDate = (date, lang) => {\r\n    const isArrivalThisYear = date.year == new Date().getFullYear();\r\n    const isArrivalToday = isArrivalThisYear && date.monthNum == new Date().getMonth() + 1 && date.day == new Date().getDate();\r\n\r\n    if (lang === \"eng\")\r\n        return isArrivalToday\r\n            ? `${date.hour}:${date.minute}:${date.second}`\r\n            : isArrivalThisYear\r\n            ? `${date.month} ${date.day}, ${date.hour}:${date.minute}:${date.second}`\r\n            : `${date.month} ${date.day}, ${date.year} ${date.hour}:${date.minute}:${date.second}`;\r\n    if (lang === \"ru\")\r\n        return isArrivalToday\r\n            ? `${date.hour}:${date.minute}:${date.second}`\r\n            : isArrivalThisYear\r\n            ? `${date.day}.${date.monthNum}, ${date.hour}:${date.minute}:${date.second}`\r\n            : `${date.day}.${date.monthNum}.${date.year}, ${date.hour}:${date.minute}:${date.second}`;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authUserId: state.auth.id,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(Message);\r\n","import styles from \"./Messages.module.scss\";\r\nimport Message from \"./Message/Message\";\r\nimport { useContext, useEffect, useRef } from \"react\";\r\nimport { infiniteScrollObserver } from \"../../../utils/intersectionObserver\";\r\nimport { AppContext } from \"../../../App\";\r\n\r\nconst Messages = ({ currentPage, setIsNewMessage, inputHeight, dialogId, getDialog, observerRef, setObserverRef, ...props }) => {\r\n    const appContext = useContext(AppContext);\r\n\r\n    //скролл вниз при вмонтировании компонента и новом сообщении\r\n    useEffect(() => {\r\n        if (props.messages.isNewMessage === true) {\r\n            scrollDown();\r\n            setIsNewMessage(false);\r\n        }\r\n    }, [props.messages.isNewMessage]);\r\n\r\n    useEffect(() => {\r\n        scrollDown();\r\n    }, []);\r\n\r\n    //observer\r\n    useEffect(() => {\r\n        if (messages && messages[1]) {\r\n            //если пришло новое сообщение, а не порция старых из-за скролла, нужно снять старый обсервер и после этого ставить новый\r\n            if (props.messages.isNewMessage && observerRef.observer !== null) {\r\n                observerRef.observer.unobserve(observerRef.target);\r\n            }\r\n\r\n            let target = document.querySelector(`[id=\"${messages[1].key}\"]`);\r\n            let observer = infiniteScrollObserver(observerOptions, callbackFunc);\r\n            setObserverRef({ observer: observer, target: target });\r\n            observer.observe(target);\r\n        }\r\n    }, [props.messages.data]);\r\n\r\n    let observerOptions = {\r\n        root: document.querySelector(styles.wrap),\r\n    };\r\n\r\n    let callbackFunc = () => {\r\n        getDialog(dialogId);\r\n    };\r\n\r\n    //----//\r\n\r\n    let wrapRef = useRef();\r\n    let messages = props.messages.data.map((el) => <Message key={el.id} {...el} userImage={props.userImage} recipientImage={props.recipientImage} />);\r\n\r\n    let scrollDown = () => {\r\n        let scrollHeight = wrapRef.current.scrollHeight;\r\n        let blockHeight = window.getComputedStyle(wrapRef.current).height;\r\n        blockHeight = blockHeight.slice(0, blockHeight.indexOf(\"p\"));\r\n        wrapRef.current.scrollTop = scrollHeight - blockHeight;\r\n    };\r\n\r\n    return (\r\n        <div\r\n            ref={wrapRef}\r\n            className={appContext.currentTheme === \"dark\" ? styles.wrap + \" \" + styles.wrap_dark : styles.wrap}\r\n            style={{ marginBottom: inputHeight }}\r\n        >\r\n            {messages}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Messages;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Input_wrap__wn37F\",\"wrap_dark\":\"Input_wrap_dark__-AchI\",\"form\":\"Input_form__oz+BC\",\"button\":\"Input_button__Ur7gg\"};","import React, { useContext, useRef } from \"react\";\r\nimport styles from \"./Input.module.scss\";\r\n// import { reduxForm } from \"redux-form\";\r\n// import { Field } from \"redux-form\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { isRequiredNoError } from \"../../../utils/formValidation\";\r\nimport { RenderTextareaFormik } from \"../../_common/Inputs/Inputs\";\r\nimport { AppContext } from \"../../../App\";\r\n\r\nconst validateNewMessageField = (value) => {\r\n    let error = isRequiredNoError(value);\r\n    return error;\r\n};\r\n\r\nconst Input = ({ dialogId, onInputHeightChange, ...props }) => {\r\n    const appContext = useContext(AppContext);\r\n\r\n    const wrapRef = useRef();\r\n    // wrapRef.current && console.log(window.getComputedStyle(wrapRef.current).height);\r\n\r\n    const submit = (values, actions) => {\r\n        props.sendMessage(dialogId, values.newMessageText);\r\n        onInputHeightChange(\"67px\");\r\n        actions.setSubmitting(false);\r\n        actions.resetForm();\r\n    };\r\n\r\n    const onHeightChange = () => {\r\n        onInputHeightChange(window.getComputedStyle(wrapRef.current).height);\r\n    };\r\n\r\n    return (\r\n        <div ref={wrapRef} className={appContext.currentTheme === \"dark\" ? styles.wrap + \" \" + styles.wrap_dark : styles.wrap}>\r\n            <Formik initialValues={{ newMessageText: \"\" }} onSubmit={submit}>\r\n                {({ isSubmitting }) => (\r\n                    <Form className={styles.form}>\r\n                        <Field\r\n                            type=\"text\"\r\n                            name=\"newMessageText\"\r\n                            component={RenderTextareaFormik}\r\n                            onHeightChange={onHeightChange}\r\n                            validate={validateNewMessageField}\r\n                            placeholder={\r\n                                appContext.currentLanguage === \"eng\"\r\n                                    ? \"Type a message...\"\r\n                                    : appContext.currentLanguage === \"ru\" && \"Напишите сообщение...\"\r\n                            }\r\n                            defaultHeight={40}\r\n                            maxHeight={\"200px\"}\r\n                        />\r\n\r\n                        {/* <ErrorMessage name=\"newPostText\" component={ErrorComponent} /> */}\r\n                        <button className={styles.button + \" button\"} type=\"submit\" disabled={isSubmitting}>\r\n                            {appContext.currentLanguage === \"eng\" && \"Send\"} {appContext.currentLanguage === \"ru\" && \"Отправить\"}\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;\r\n","import styles from \"./Chat.module.scss\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport Header from \"./Header/Header\";\r\nimport Messages from \"./Messages/Messages\";\r\nimport Input from \"./Input/Input\";\r\nimport Preloader from \"../_common/Preloader/Preloader\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { AppContext } from \"../../App\";\r\nimport { checkScrollbar } from \"../../utils/checkScrollbar\";\r\n\r\nconst Chat = ({ isInit, initializeChat, cleanUpChat, setIsNewMessage, messages, sendMessage, ...props }) => {\r\n    const appContext = useContext(AppContext);\r\n    const docTitle = appContext.currentLanguage === \"eng\" ? \"Messages | Feelanet\" : appContext.currentLanguage === \"ru\" && \"Сообщения | Feelanet\";\r\n\r\n    useEffect(() => {\r\n        checkScrollbar() ? appContext.setIsScrollbarActive(true) : appContext.setIsScrollbarActive(false);\r\n    });\r\n\r\n    useEffect(() => {\r\n        document.title = docTitle;\r\n    }, [appContext.currentLanguage]);\r\n\r\n    useEffect(() => {\r\n        initializeChat(dialogId);\r\n        return () => {\r\n            cleanUpChat();\r\n        };\r\n    }, []);\r\n\r\n    const dialogId = useParams().userId;\r\n    const [inputHeight, setInputHeight] = useState(\"67px\");\r\n    //ссылка на обсервер из дочернего элемента, чтобы удалять старый обсервер при создании нового\r\n    const [childObserverRef, setObserverRef] = useState({\r\n        observer: null,\r\n        target: null,\r\n    });\r\n\r\n    //размер инпута при каждом изменении, чтобы прокинуть в сообщения и отредактировать высоту\r\n    const onInputHeightChange = (height) => {\r\n        setInputHeight(height);\r\n    };\r\n\r\n    if (!isInit)\r\n        return (\r\n            <div className={styles.wrap + \" wrapNoPadding\"}>\r\n                <Preloader />\r\n            </div>\r\n        );\r\n\r\n    if (isInit)\r\n        return (\r\n            <div className={styles.wrap}>\r\n                <Helmet title={docTitle} />\r\n                <div className={styles.contentWrap + \" wrapNoPadding\"}>\r\n                    <Header recipientImage={props.recipientImage} recipientName={props.recipientName} dialogId={dialogId} />\r\n                    <Messages\r\n                        setIsNewMessage={setIsNewMessage}\r\n                        messages={messages}\r\n                        userImage={props.userImage}\r\n                        recipientImage={props.recipientImage}\r\n                        inputHeight={inputHeight}\r\n                        dialogId={dialogId}\r\n                        getDialog={props.getDialog}\r\n                        observerRef={childObserverRef}\r\n                        setObserverRef={setObserverRef}\r\n                    />\r\n                    <Input sendMessage={sendMessage} dialogId={dialogId} onInputHeightChange={onInputHeightChange} />\r\n                </div>\r\n                {/* <Sidebar /> */}\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default Chat;\r\n","import Chat from \"./Chat\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDialog, cleanUpChat, setIsNewMessage, sendMessage, initializeChat } from \"../../redux/chatReducer\"\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { selectChatIsInit, selectMessages, selectRecipientImg, selectRecipientName, selectUserImg } from \"../../redux/chatSelectors\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isInit: selectChatIsInit(state),\r\n        messages: selectMessages(state),\r\n        userImage: selectUserImg(state),\r\n        recipientImage: selectRecipientImg(state),\r\n        recipientName: selectRecipientName(state)\r\n    };\r\n};\r\n\r\nconst dispatchObj = {\r\n    initializeChat,\r\n    cleanUpChat,\r\n    setIsNewMessage,\r\n    sendMessage,\r\n    getDialog,\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, dispatchObj),\r\n)(Chat);","// extracted by mini-css-extract-plugin\nexport default {\"inputWrap\":\"Inputs_inputWrap__bxhik\",\"inputWrap_withIcon\":\"Inputs_inputWrap_withIcon__xxyLT\",\"inputWrap_dark\":\"Inputs_inputWrap_dark__wb1gX\",\"input\":\"Inputs_input__6JgzO\",\"icon\":\"Inputs_icon__v2Fgu\",\"input_login\":\"Inputs_input_login__PyDfd\",\"input_error\":\"Inputs_input_error__N+OzZ\",\"textarea\":\"Inputs_textarea__K0ZBr\",\"textarea_dark\":\"Inputs_textarea_dark__ibBbA\",\"textareaError\":\"Inputs_textareaError__+oBhi\",\"textareaWarning\":\"Inputs_textareaWarning__brwqt\",\"warningWrap\":\"Inputs_warningWrap__JmUfg\",\"checkboxWrap\":\"Inputs_checkboxWrap__AZQyn\",\"checkbox\":\"Inputs_checkbox__gnsjA\",\"checkbox__label\":\"Inputs_checkbox__label__G4bqt\"};","import styles from \"./Inputs.module.scss\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { SvgSelector } from \"../SvgSelector/SvgSelector\";\r\nimport { AppContext } from \"../../../App\";\r\n\r\nexport const RenderInputFormik = ({ form, field, options, onValueChange, children, ...props }) => {\r\n    const appContext = useContext(AppContext);\r\n\r\n    //max length check\r\n    options && options.inputMaxLength && field.value.length > options.inputMaxLength && (field.value = field.value.substr(0, options.inputMaxLength));\r\n\r\n    useEffect(() => {\r\n        onValueChange && onValueChange(field.value);\r\n    }, [field.value]);\r\n\r\n    let wrapClassName = appContext.currentTheme === \"dark\" ? styles.inputWrap + \" \" + styles.inputWrap_dark : styles.inputWrap;\r\n    let inputClassName;\r\n    switch (props.type) {\r\n        case \"text\":\r\n            wrapClassName = options && options.icon ? wrapClassName + \" \" + styles.inputWrap_withIcon : wrapClassName;\r\n            inputClassName = options && options.showErrors && form.errors[field.name] ? styles.input + \" \" + styles.input_error : styles.input;\r\n            break;\r\n        case \"checkbox\":\r\n            wrapClassName = styles.checkboxWrap;\r\n            inputClassName = styles.checkbox;\r\n            break;\r\n        default:\r\n            inputClassName = options && options.showErrors && form.errors[field.name] ? styles.input + \" \" + styles.input_error : styles.input;\r\n            break;\r\n    }\r\n\r\n    // const inputClassName = inputClassSwitch(props.inputType);\r\n\r\n    return (\r\n        <div className={wrapClassName}>\r\n            <input\r\n                style={{\r\n                    border: options && options.border,\r\n                    padding: options && options.padding,\r\n                }}\r\n                name={field.name}\r\n                value={field.value}\r\n                onChange={form.handleChange}\r\n                className={inputClassName}\r\n                checked={field.checked}\r\n                {...props}\r\n            />\r\n            {options && options.icon && <SvgSelector className={styles.icon} id={options.icon} />}\r\n            {props.label && <span className={styles.checkbox__label}>{props.label}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const RenderTextareaFormik = ({ form, field, ...props }) => {\r\n    const appContext = useContext(AppContext);\r\n\r\n    const InputClassSwitch = (inputType) => {\r\n        switch (inputType) {\r\n            default:\r\n                return appContext.currentTheme === \"dark\" ? styles.textarea + \" \" + styles.textarea_dark : styles.textarea;\r\n        }\r\n    };\r\n\r\n    const textareaRef = React.createRef();\r\n\r\n    const changeHeight = (e) => {\r\n        textareaRef.current.style.height = `${props.defaultHeight + 2}px`;\r\n        let contentHeight = `${e.target.scrollHeight}px`;\r\n        textareaRef.current.style.height = contentHeight;\r\n        props.onHeightChange && props.onHeightChange();\r\n    };\r\n\r\n    //проверяю значение на пустое для ресета высоты при сабмите\r\n    useEffect(() => {\r\n        if (!form.values[field.name]) resetHeight();\r\n    }, [form.values]);\r\n\r\n    const resetHeight = () => {\r\n        textareaRef.current.style.height = `${props.defaultHeight + 2}px`;\r\n    };\r\n\r\n    //если есть перенос строки, задаю максимальную высоту\r\n    const defaultHeight = field.value.includes(\"\\n\") ? props.maxHeight : `${props.defaultHeight}px`;\r\n\r\n    const inputClassName = InputClassSwitch(props.inputType);\r\n\r\n    return (\r\n        <textarea\r\n            ref={textareaRef}\r\n            style={{ height: defaultHeight, maxHeight: props.maxHeight }}\r\n            type={props.type}\r\n            name={field.name}\r\n            onChange={(e) => {\r\n                form.handleChange(e);\r\n                changeHeight(e);\r\n            }}\r\n            onFocus={() => {\r\n                props.onFocus && props.onFocus();\r\n            }}\r\n            onBlur={() => {\r\n                props.onBlur && props.onBlur();\r\n            }}\r\n            value={field.value}\r\n            className={inputClassName}\r\n            placeholder={props.placeholder}\r\n        />\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Preloader_wrap__BkHvc\",\"gif\":\"Preloader_gif__18c7L\"};","import loadingGif from \"../../../lib/img/preloading.gif\";\r\nimport styles from \"./Preloader.module.scss\";\r\n\r\nconst Preloader = (props) => {\r\n    return <div className={styles.wrap}>\r\n        <img className={styles.gif} src={loadingGif}></img>\r\n    </div>\r\n};\r\n\r\nexport default Preloader;\r\n","import { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { getUserData } from '../redux/authReducer';\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    let RedirectComponent = (props) => {\r\n        if (props.isAuth) return (\r\n            <Component {...props} />\r\n        )\r\n        return (\r\n            <Navigate replace to=\"/login\" />\r\n        )\r\n    };\r\n\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        };\r\n    };\r\n\r\n    let dispatchObj = {\r\n        getUserData\r\n    }\r\n\r\n    let containerAuthRedirect = connect(mapStateToProps, dispatchObj)(RedirectComponent);\r\n    return containerAuthRedirect;\r\n}\r\n\r\n\r\n\r\n\r\n","import { createSelector } from \"reselect\"\r\n\r\nexport const selectDialogsIsInit = (state) => {\r\n    return state.chat.dialogsIsInit\r\n}\r\n\r\nexport const selectChatIsInit = (state) => {\r\n    return state.chat.chatIsInit\r\n}\r\n\r\nexport const selectDialogsSearchTerm = (state) => {\r\n    return state.chat.dialogsSearchTerm\r\n}\r\n\r\nconst selectDialogsWOSearchTerm = (state) => {\r\n    return state.chat.dialogs\r\n}\r\n\r\nexport const selectDialogs = createSelector(selectDialogsWOSearchTerm, selectDialogsSearchTerm, (dialogs, searchTerm) => {\r\n    let filteredDialogs = dialogs.filter(dialog => dialog.userName.includes(searchTerm))\r\n    return filteredDialogs;\r\n})\r\n\r\nexport const selectMessages = (state) => {\r\n    return state.chat.messages\r\n}\r\n\r\nexport const selectUserImg = (state) => {\r\n    return state.chat.userPhoto\r\n}\r\n\r\nexport const selectRecipientName = (state) => {\r\n    return state.chat.recipientName\r\n}\r\n\r\nexport const selectRecipientImg = (state) => {\r\n    return state.chat.recipientPhoto\r\n}","export const checkScrollbar = () => {\r\n    if (document.body.clientWidth < window.innerWidth) {\r\n        return true\r\n    }\r\n    return false\r\n}","export const isRequired = (value, lang) => {\r\n    let error = 'Field is required';\r\n    lang === 'ru' && (error = 'Обязательное поле')\r\n    return value ? undefined : error\r\n}\r\n\r\nexport const isRequiredNoError = (value) => {\r\n    return value ? undefined : \" \";\r\n};\r\n\r\nexport const maxLength = (value, max, lang) => {\r\n    let error = null;\r\n    value && value.length > max && (error = `Must be ${max} characters or less`)\r\n    value && value.length > max && lang === 'ru' && (error = `Максимальная длина строки - ${max} символов`)\r\n    return error\r\n}\r\n\r\nexport const minLength = (value, min, lang) => {\r\n    let error = null;\r\n    value && value.length < min && (error = `Must be ${min} characters or less`)\r\n    value && value.length < min && lang === 'ru' && (error = `Минимальная длина строки - ${min} символов`)\r\n    return error;\r\n}\r\n\r\nexport const validateEmail = (value, lang) => {\r\n    let error;\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n        error = \"Invalid Email address\";\r\n        lang === 'ru' && (error = 'Некорректный Email адрес')\r\n    }\r\n    return error;\r\n};\r\n\r\nexport const validateUrl = (value, lang) => {\r\n    let error;\r\n    if (value.length === 0) { return error }\r\n    if (!/^[A-Z0-9._%+-]+\\.[A-Z0-9/._-]{2,1000}$/i.test(value)) {\r\n        error = \"Invalid URL\";\r\n        lang === 'ru' && (error = 'Некорректный URL адрес')\r\n    }\r\n    return error;\r\n}","export const infiniteScrollObserver = ({ root, rootMargin = '0px', threshold = 0.1 }, callbackFunc) => {\r\n    let options = {\r\n        root: root,\r\n        rootMargin: rootMargin,\r\n        threshold: threshold,\r\n    };\r\n\r\n    // функция обратного вызова\r\n    let callback = function (entries, observer) {\r\n        entries.forEach((entry) => {\r\n            if (entry.isIntersecting) {\r\n                callbackFunc()\r\n                observer.unobserve(entry.target)\r\n            }\r\n        });\r\n    };\r\n\r\n    // наблюдатель\r\n    let observer = new IntersectionObserver(callback, options);\r\n    return observer;\r\n}"],"names":["recipientImage","recipientName","dialogId","appContext","useContext","AppContext","className","currentTheme","styles","to","SvgSelector","id","currentLanguage","src","alt","monthNumToAbb","month","setDate","date","lang","isArrivalThisYear","year","Date","getFullYear","isArrivalToday","monthNum","getMonth","day","getDate","hour","minute","second","connect","state","authUserId","auth","props","wrapClassName","senderId","viewed","imgUrl","userImage","dateSrc","slice","indexOf","time","fullTime","dateToObj","addedAt","arrivalTime","senderName","dangerouslySetInnerHTML","__html","body","currentPage","setIsNewMessage","inputHeight","getDialog","observerRef","setObserverRef","useEffect","messages","isNewMessage","scrollDown","observer","unobserve","target","document","querySelector","key","infiniteScrollObserver","observerOptions","callbackFunc","observe","data","root","wrapRef","useRef","map","el","scrollHeight","current","blockHeight","window","getComputedStyle","height","scrollTop","ref","style","marginBottom","validateNewMessageField","value","isRequiredNoError","onInputHeightChange","onHeightChange","initialValues","newMessageText","onSubmit","values","actions","sendMessage","setSubmitting","resetForm","isSubmitting","type","name","component","RenderTextareaFormik","validate","placeholder","defaultHeight","maxHeight","disabled","isInit","initializeChat","cleanUpChat","docTitle","checkScrollbar","setIsScrollbarActive","title","useParams","userId","useState","setInputHeight","childObserverRef","Helmet","Preloader","dispatchObj","compose","withAuthRedirect","selectChatIsInit","selectMessages","selectUserImg","selectRecipientImg","selectRecipientName","Chat","RenderInputFormik","form","field","options","onValueChange","children","inputMaxLength","length","substr","inputClassName","icon","showErrors","errors","border","padding","onChange","handleChange","checked","label","textareaRef","React","resetHeight","includes","inputType","e","contentHeight","changeHeight","onFocus","onBlur","loadingGif","Component","getUserData","isAuth","replace","selectDialogsIsInit","chat","dialogsIsInit","chatIsInit","selectDialogsSearchTerm","dialogsSearchTerm","selectDialogs","createSelector","dialogs","searchTerm","filter","dialog","userName","userPhoto","recipientPhoto","clientWidth","innerWidth","isRequired","error","undefined","maxLength","max","minLength","min","validateEmail","test","validateUrl","rootMargin","threshold","IntersectionObserver","entries","forEach","entry","isIntersecting"],"sourceRoot":""}