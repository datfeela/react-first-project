{"version":3,"file":"static/js/828.f465306f.chunk.js","mappings":"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","sources":["webpack://first-project/./src/components/Friends/Friends.module.scss?f486","components/Friends/Friends.jsx","webpack://first-project/./src/components/Users/UsersHeader/UsersHeader.module.scss?9167","webpack://first-project/./src/components/Users/UsersSearch/UsersSearch.module.scss?dd52","components/Users/UsersSearch/UsersSearch.jsx","components/Users/UsersHeader/UsersHeader.jsx","webpack://first-project/./src/components/Users/UsersList/User/User.module.scss?c795","components/Users/UsersList/User/User.jsx","webpack://first-project/./src/components/Users/UsersList/UsersList.module.scss?4a04","components/Users/UsersList/UsersList.jsx","components/Users/UsersList/UsersListContainer.jsx","webpack://first-project/./src/components/_common/Inputs/Inputs.module.scss?8af3","components/_common/Inputs/Inputs.jsx","webpack://first-project/./src/components/_common/Preloader/Preloader.module.scss?3ea5","components/_common/Preloader/Preloader.jsx","hoc/withAuthRedirect.js","utils/checkScrollbar.js","utils/intersectionObserver.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Friends_wrap__t2Kkp\"};","import styles from \"./Friends.module.scss\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport UsersListContainer from \"../Users/UsersList/UsersListContainer\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport UsersHeader from \"../Users/UsersHeader/UsersHeader\";\r\nimport Helmet from \"react-helmet\";\r\nimport { AppContext } from \"../../App\";\r\n\r\nconst Friends = (props) => {\r\n    const [childObserverRef, setObserverRef] = useState({\r\n        observer: null,\r\n        target: null,\r\n    });\r\n\r\n    const appContext = useContext(AppContext);\r\n    const docTitle = appContext.currentLanguage === \"eng\" ? \"Friends | Feelanet\" : appContext.currentLanguage === \"ru\" && \"Друзья | Feelanet\";\r\n\r\n    useEffect(() => {\r\n        document.title = docTitle;\r\n    }, [appContext.currentLanguage]);\r\n\r\n    return (\r\n        <div className={styles.wrap + \" wrap\"}>\r\n            <Helmet title={docTitle} />\r\n            <UsersHeader />\r\n            <UsersListContainer isLoadingFriends={true} observerRef={childObserverRef} setObserverRef={setObserverRef} />\r\n        </div>\r\n    );\r\n};\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(Friends);\r\nexport default AuthRedirectComponent;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"UsersHeader_wrap__TfRkM\",\"wrap_dark\":\"UsersHeader_wrap_dark__R2H9l\",\"innerWrap\":\"UsersHeader_innerWrap__eRkYv\",\"title\":\"UsersHeader_title__wXUvn\",\"count\":\"UsersHeader_count__TdLm7\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"UsersSearch_wrap__GLZj2\",\"wrap_dark\":\"UsersSearch_wrap_dark__01hFD\"};","import styles from \"./UsersSearch.module.scss\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport { RenderInputFormik } from \"../../_common/Inputs/Inputs\";\r\nimport { setSearchTerm } from \"../../../redux/usersPageReducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectSearchTerm } from \"../../../redux/usersPageSelectors\";\r\nimport { useContext } from \"react\";\r\nimport { AppContext } from \"../../../App\";\r\n\r\nconst UsersSearch = (props) => {\r\n    const appContext = useContext(AppContext);\r\n\r\n    const submit = (values, actions) => {\r\n        actions.setSubmitting(false);\r\n    };\r\n\r\n    const setSearchTerm = (value) => {\r\n        value !== props.searchTerm && props.setSearchTerm(value);\r\n    };\r\n\r\n    return (\r\n        <div className={appContext.currentTheme === \"dark\" ? styles.wrap + \" wrapNoPadding  \" + styles.wrap_dark : styles.wrap + \" wrapNoPadding\"}>\r\n            <Formik initialValues={{ usersSearchInput: \"\" }} onSubmit={submit}>\r\n                {() => (\r\n                    <Form>\r\n                        <Field\r\n                            type=\"text\"\r\n                            name=\"usersSearchInput\"\r\n                            component={RenderInputFormik}\r\n                            placeholder={appContext.currentLanguage === \"eng\" ? \"Search\" : appContext.currentLanguage === \"ru\" && \"Поиск\"}\r\n                            onValueChange={setSearchTerm}\r\n                            autoComplete=\"off\"\r\n                            options={{\r\n                                border: \"none\",\r\n                                icon: \"search\",\r\n                                padding: \"0px\",\r\n                            }}\r\n                        />\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        searchTerm: selectSearchTerm(state),\r\n    };\r\n};\r\n\r\nlet dispatchObj = {\r\n    setSearchTerm,\r\n};\r\n\r\nexport default connect(mapStateToProps, dispatchObj)(UsersSearch);\r\n","import styles from \"./UsersHeader.module.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport UsersSearch from \"../UsersSearch/UsersSearch\";\r\nimport { selectUsersFoundCount } from \"../../../redux/usersPageSelectors\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { AppContext } from \"../../../App\";\r\n\r\nconst UsersHeader = ({ usersFound }) => {\r\n    const appContext = useContext(AppContext);\r\n\r\n    const location = useLocation();\r\n    let headerText, countText;\r\n\r\n    switch (location.pathname) {\r\n        case \"/friends\":\r\n            headerText = appContext.currentLanguage === \"eng\" ? \"Your friends \" : appContext.currentLanguage === \"ru\" && \"Друзья \";\r\n            countText = ` ${usersFound}`;\r\n            break;\r\n        case \"/users\":\r\n            headerText = appContext.currentLanguage === \"eng\" ? \"Search results \" : appContext.currentLanguage === \"ru\" && \"Результаты поиска \";\r\n            countText = `(${usersFound} ${\r\n                appContext.currentLanguage === \"eng\" ? \"found\" : appContext.currentLanguage === \"ru\" && \"найдено\"\r\n            })`;\r\n    }\r\n\r\n    return (\r\n        <div className={appContext.currentTheme === \"dark\" ? styles.wrap + \" wrapNoPadding \" + styles.wrap_dark : styles.wrap + \" wrapNoPadding\"}>\r\n            <div className={styles.innerWrap + \" wrap\"}>\r\n                <h1 className={styles.title}>\r\n                    {headerText} <span className={styles.count}>{usersFound && countText}</span>\r\n                </h1>\r\n            </div>\r\n            <UsersSearch />\r\n        </div>\r\n    );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        usersFound: selectUsersFoundCount(state),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(UsersHeader);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"User_wrap__J9He3\",\"wrap_dark\":\"User_wrap_dark__itgCr\",\"name\":\"User_name__4U9vE\",\"actions_item\":\"User_actions_item__qR4nV\",\"status\":\"User_status__ExTSD\",\"avatar\":\"User_avatar__5oNpk\",\"info\":\"User_info__LibdO\",\"location\":\"User_location__rcq+8\",\"actions\":\"User_actions__wyZCI\",\"button_disabled\":\"User_button_disabled__lxvje\",\"divider\":\"User_divider__d2K9H\"};","import styles from \"./User.module.scss\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useContext } from \"react\";\r\nimport { AppContext } from \"../../../../App\";\r\n\r\nconst User = ({ user, subscribe }) => {\r\n    const appContext = useContext(AppContext);\r\n\r\n    let subscribeText = user.followed\r\n        ? appContext.currentLanguage === \"eng\"\r\n            ? \"Unsubscribe\"\r\n            : appContext.currentLanguage === \"ru\" && \"Отписаться\"\r\n        : appContext.currentLanguage === \"eng\"\r\n        ? \"Subscribe\"\r\n        : appContext.currentLanguage === \"ru\" && \"Подписаться\";\r\n    let imgSrc = user.photos.small != null ? user.photos.small : \"https://via.placeholder.com/160x160?text=Pic\";\r\n\r\n    const subscribeButtonClickHandler = () => {\r\n        if (user.subscribeBtnIsActive) {\r\n            subscribe(user.id);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={appContext.currentTheme === \"dark\" ? styles.wrap + \" \" + styles.wrap_dark : styles.wrap} id={user.id}>\r\n            <NavLink to={`/profile/${user.id}`}>\r\n                <img src={imgSrc} alt=\"avatar\" className={styles.avatar} />\r\n            </NavLink>\r\n            <div className={styles.info}>\r\n                <NavLink to={`/profile/${user.id}`}>\r\n                    <span className={styles.name}>{user.name}</span>\r\n                </NavLink>\r\n                {/* <span className={styles.location}>user.location</span> */}\r\n                <span className={styles.status}>{user.status}</span>\r\n                <div className={styles.actions}>\r\n                    <NavLink to={`/dialog/${user.id}`} className={styles.actions_item}>\r\n                        {appContext.currentLanguage === \"eng\" && \"Message\"} {appContext.currentLanguage === \"ru\" && \"Написать сообщение\"}\r\n                    </NavLink>\r\n                    <span className={styles.divider}></span>\r\n                    <button\r\n                        onClick={subscribeButtonClickHandler}\r\n                        className={user.subscribeBtnIsActive ? styles.actions_item : styles.actions_item + \" \" + styles.button_disabled}\r\n                    >\r\n                        {subscribeText}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"UsersList_wrap__zVXBk\",\"buttonLoadMore\":\"UsersList_buttonLoadMore__HN4tO\",\"buttonLoadMore_hovered\":\"UsersList_buttonLoadMore_hovered__KJGUy\",\"preloader\":\"UsersList_preloader__viTnh\",\"preloader_disabled\":\"UsersList_preloader_disabled__sMDaI\",\"DELETETHIS\":\"UsersList_DELETETHIS__CyhsW\"};","import User from \"./User/User\";\r\nimport styles from \"./UsersList.module.scss\";\r\nimport Preloader from \"./../../_common/Preloader/Preloader\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { infiniteScrollObserver } from \"../../../utils/intersectionObserver\";\r\nimport { checkScrollbar } from \"../../../utils/checkScrollbar\";\r\nimport { AppContext } from \"../../../App\";\r\n\r\nconst UsersList = ({ isAllUsersLoaded, isFetching, users, searchTerm, subscribe, resetUsers, updateUsersLoadPage, cleanUp, getUsers }) => {\r\n    const appContext = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        checkScrollbar() ? appContext.setIsScrollbarActive(true) : appContext.setIsScrollbarActive(false);\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (users.length === 0) {\r\n            getUsers();\r\n        }\r\n    }, [users.length, searchTerm]);\r\n\r\n    useEffect(() => {\r\n        updateUsersLoadPage(1);\r\n        users.length && resetUsers();\r\n    }, [searchTerm]);\r\n\r\n    //cleanup\r\n    useEffect(() => {\r\n        return () => {\r\n            cleanUp();\r\n        };\r\n    }, []);\r\n\r\n    //observer\r\n    let observerOptions = {\r\n        root: document.querySelector(styles.wrap + \" wrap\"),\r\n    };\r\n\r\n    let callbackFunc = () => {\r\n        getUsers();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (users && users[users.length - 2] && !isAllUsersLoaded) {\r\n            let target = document.querySelector(`[id=\"${users[users.length - 2].id}\"]`);\r\n            let observer = infiniteScrollObserver(observerOptions, callbackFunc);\r\n            // setObserverRef({ observer: observer, target: target });\r\n            observer.observe(target);\r\n        }\r\n    }, [users]);\r\n\r\n    //----//\r\n\r\n    let userElems = users.map((u) => <User key={u.id} user={u} subscribe={subscribe} />);\r\n    return (\r\n        <div className={styles.wrap + \" wrap\"}>\r\n            {userElems}\r\n            <div className={isFetching ? styles.preloader : styles.preloader_disabled}>\r\n                <Preloader />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { initializeUsers, getUsers, subscribe, cleanUp, resetUsers, updateUsersLoadPage, setAllUsersLoaded } from \"../../../redux/usersPageReducer\";\r\nimport {\r\n    selectCurrentPageNumber,\r\n    selectIsFetching,\r\n    selectUsers,\r\n    selectUsersPerLoad,\r\n    selectIsAllUsersLoaded,\r\n    selectSearchTerm,\r\n    selectIsInit,\r\n} from \"../../../redux/usersPageSelectors\";\r\nimport UsersList from \"./UsersList\";\r\n\r\nconst UsersListContainer = ({ isInit, initializeUsers, subscribe, ...props }) => {\r\n    const getUsers = () => {\r\n        props.getUsers(props.isLoadingFriends);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!isInit) initializeUsers(props.isLoadingFriends);\r\n    }, [isInit]);\r\n\r\n    if (!isInit) return <div>fix this pls</div>;\r\n\r\n    if (isInit)\r\n        return (\r\n            <UsersList\r\n                users={props.users}\r\n                searchTerm={props.searchTerm}\r\n                cleanUp={props.cleanUp}\r\n                subscribe={subscribe}\r\n                getUsers={getUsers}\r\n                resetUsers={props.resetUsers}\r\n                updateUsersLoadPage={props.updateUsersLoadPage}\r\n                isFetching={props.isFetching}\r\n                isAllUsersLoaded={props.isAllUsersLoaded}\r\n            />\r\n        );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isInit: selectIsInit(state),\r\n        users: selectUsers(state),\r\n        usersPerLoad: selectUsersPerLoad(state),\r\n        currentPage: selectCurrentPageNumber(state),\r\n        isFetching: selectIsFetching(state),\r\n        isAllUsersLoaded: selectIsAllUsersLoaded(state),\r\n        searchTerm: selectSearchTerm(state),\r\n    };\r\n};\r\n\r\nlet dispatchObj = {\r\n    initializeUsers,\r\n    getUsers,\r\n    subscribe,\r\n    selectSearchTerm,\r\n    cleanUp,\r\n    setAllUsersLoaded,\r\n    updateUsersLoadPage,\r\n    resetUsers,\r\n};\r\n\r\nexport default connect(mapStateToProps, dispatchObj)(UsersListContainer);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputWrap\":\"Inputs_inputWrap__bxhik\",\"inputWrap_withIcon\":\"Inputs_inputWrap_withIcon__xxyLT\",\"inputWrap_dark\":\"Inputs_inputWrap_dark__wb1gX\",\"input\":\"Inputs_input__6JgzO\",\"icon\":\"Inputs_icon__v2Fgu\",\"input_login\":\"Inputs_input_login__PyDfd\",\"input_error\":\"Inputs_input_error__N+OzZ\",\"textarea\":\"Inputs_textarea__K0ZBr\",\"textarea_dark\":\"Inputs_textarea_dark__ibBbA\",\"textareaError\":\"Inputs_textareaError__+oBhi\",\"textareaWarning\":\"Inputs_textareaWarning__brwqt\",\"warningWrap\":\"Inputs_warningWrap__JmUfg\",\"checkboxWrap\":\"Inputs_checkboxWrap__AZQyn\",\"checkbox\":\"Inputs_checkbox__gnsjA\",\"checkbox__label\":\"Inputs_checkbox__label__G4bqt\"};","import styles from \"./Inputs.module.scss\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { SvgSelector } from \"../SvgSelector/SvgSelector\";\r\nimport { AppContext } from \"../../../App\";\r\n\r\nexport const RenderInputFormik = ({ form, field, options, onValueChange, children, ...props }) => {\r\n    const appContext = useContext(AppContext);\r\n\r\n    //max length check\r\n    options && options.inputMaxLength && field.value.length > options.inputMaxLength && (field.value = field.value.substr(0, options.inputMaxLength));\r\n\r\n    useEffect(() => {\r\n        onValueChange && onValueChange(field.value);\r\n    }, [field.value]);\r\n\r\n    let wrapClassName = appContext.currentTheme === \"dark\" ? styles.inputWrap + \" \" + styles.inputWrap_dark : styles.inputWrap;\r\n    let inputClassName;\r\n    switch (props.type) {\r\n        case \"text\":\r\n            wrapClassName = options && options.icon ? wrapClassName + \" \" + styles.inputWrap_withIcon : wrapClassName;\r\n            inputClassName = options && options.showErrors && form.errors[field.name] ? styles.input + \" \" + styles.input_error : styles.input;\r\n            break;\r\n        case \"checkbox\":\r\n            wrapClassName = styles.checkboxWrap;\r\n            inputClassName = styles.checkbox;\r\n            break;\r\n        default:\r\n            inputClassName = options && options.showErrors && form.errors[field.name] ? styles.input + \" \" + styles.input_error : styles.input;\r\n            break;\r\n    }\r\n\r\n    // const inputClassName = inputClassSwitch(props.inputType);\r\n\r\n    return (\r\n        <div className={wrapClassName}>\r\n            <input\r\n                style={{\r\n                    border: options && options.border,\r\n                    padding: options && options.padding,\r\n                }}\r\n                name={field.name}\r\n                value={field.value}\r\n                onChange={form.handleChange}\r\n                className={inputClassName}\r\n                checked={field.checked}\r\n                {...props}\r\n            />\r\n            {options && options.icon && <SvgSelector className={styles.icon} id={options.icon} />}\r\n            {props.label && <span className={styles.checkbox__label}>{props.label}</span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const RenderTextareaFormik = ({ form, field, ...props }) => {\r\n    const appContext = useContext(AppContext);\r\n\r\n    const InputClassSwitch = (inputType) => {\r\n        switch (inputType) {\r\n            default:\r\n                return appContext.currentTheme === \"dark\" ? styles.textarea + \" \" + styles.textarea_dark : styles.textarea;\r\n        }\r\n    };\r\n\r\n    const textareaRef = React.createRef();\r\n\r\n    const changeHeight = (e) => {\r\n        textareaRef.current.style.height = `${props.defaultHeight + 2}px`;\r\n        let contentHeight = `${e.target.scrollHeight}px`;\r\n        textareaRef.current.style.height = contentHeight;\r\n        props.onHeightChange && props.onHeightChange();\r\n    };\r\n\r\n    //проверяю значение на пустое для ресета высоты при сабмите\r\n    useEffect(() => {\r\n        if (!form.values[field.name]) resetHeight();\r\n    }, [form.values]);\r\n\r\n    const resetHeight = () => {\r\n        textareaRef.current.style.height = `${props.defaultHeight + 2}px`;\r\n    };\r\n\r\n    //если есть перенос строки, задаю максимальную высоту\r\n    const defaultHeight = field.value.includes(\"\\n\") ? props.maxHeight : `${props.defaultHeight}px`;\r\n\r\n    const inputClassName = InputClassSwitch(props.inputType);\r\n\r\n    return (\r\n        <textarea\r\n            ref={textareaRef}\r\n            style={{ height: defaultHeight, maxHeight: props.maxHeight }}\r\n            type={props.type}\r\n            name={field.name}\r\n            onChange={(e) => {\r\n                form.handleChange(e);\r\n                changeHeight(e);\r\n            }}\r\n            onFocus={() => {\r\n                props.onFocus && props.onFocus();\r\n            }}\r\n            onBlur={() => {\r\n                props.onBlur && props.onBlur();\r\n            }}\r\n            value={field.value}\r\n            className={inputClassName}\r\n            placeholder={props.placeholder}\r\n        />\r\n    );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Preloader_wrap__BkHvc\",\"gif\":\"Preloader_gif__18c7L\"};","import loadingGif from \"../../../lib/img/preloading.gif\";\r\nimport styles from \"./Preloader.module.scss\";\r\n\r\nconst Preloader = (props) => {\r\n    return <div className={styles.wrap}>\r\n        <img className={styles.gif} src={loadingGif}></img>\r\n    </div>\r\n};\r\n\r\nexport default Preloader;\r\n","import { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { getUserData } from '../redux/authReducer';\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    let RedirectComponent = (props) => {\r\n        if (props.isAuth) return (\r\n            <Component {...props} />\r\n        )\r\n        return (\r\n            <Navigate replace to=\"/login\" />\r\n        )\r\n    };\r\n\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth\r\n        };\r\n    };\r\n\r\n    let dispatchObj = {\r\n        getUserData\r\n    }\r\n\r\n    let containerAuthRedirect = connect(mapStateToProps, dispatchObj)(RedirectComponent);\r\n    return containerAuthRedirect;\r\n}\r\n\r\n\r\n\r\n\r\n","export const checkScrollbar = () => {\r\n    if (document.body.clientWidth < window.innerWidth) {\r\n        return true\r\n    }\r\n    return false\r\n}","export const infiniteScrollObserver = ({ root, rootMargin = '0px', threshold = 0.1 }, callbackFunc) => {\r\n    let options = {\r\n        root: root,\r\n        rootMargin: rootMargin,\r\n        threshold: threshold,\r\n    };\r\n\r\n    // функция обратного вызова\r\n    let callback = function (entries, observer) {\r\n        entries.forEach((entry) => {\r\n            if (entry.isIntersecting) {\r\n                callbackFunc()\r\n                observer.unobserve(entry.target)\r\n            }\r\n        });\r\n    };\r\n\r\n    // наблюдатель\r\n    let observer = new IntersectionObserver(callback, options);\r\n    return observer;\r\n}"],"names":["withAuthRedirect","props","useState","observer","target","childObserverRef","setObserverRef","appContext","useContext","AppContext","docTitle","currentLanguage","useEffect","document","title","className","styles","Helmet","UsersHeader","UsersListContainer","isLoadingFriends","observerRef","dispatchObj","setSearchTerm","connect","state","searchTerm","selectSearchTerm","value","currentTheme","initialValues","usersSearchInput","onSubmit","values","actions","setSubmitting","type","name","component","RenderInputFormik","placeholder","onValueChange","autoComplete","options","border","icon","padding","usersFound","selectUsersFoundCount","headerText","countText","useLocation","pathname","user","subscribe","subscribeText","followed","imgSrc","photos","small","id","to","src","alt","status","onClick","subscribeBtnIsActive","isAllUsersLoaded","isFetching","users","resetUsers","updateUsersLoadPage","cleanUp","getUsers","checkScrollbar","setIsScrollbarActive","length","observerOptions","root","querySelector","callbackFunc","infiniteScrollObserver","observe","userElems","map","u","Preloader","initializeUsers","setAllUsersLoaded","isInit","selectIsInit","selectUsers","usersPerLoad","selectUsersPerLoad","currentPage","selectCurrentPageNumber","selectIsFetching","selectIsAllUsersLoaded","form","field","children","inputMaxLength","substr","inputClassName","wrapClassName","showErrors","errors","style","onChange","handleChange","checked","SvgSelector","label","RenderTextareaFormik","textareaRef","React","resetHeight","current","height","defaultHeight","includes","maxHeight","inputType","ref","e","contentHeight","scrollHeight","onHeightChange","changeHeight","onFocus","onBlur","loadingGif","Component","getUserData","isAuth","auth","replace","body","clientWidth","window","innerWidth","rootMargin","threshold","IntersectionObserver","entries","forEach","entry","isIntersecting","unobserve"],"sourceRoot":""}